{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/v1/blog-v6/client/src/components/posts/ViewPost.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport getFormattedDate from \"../../utils/getFormattedDate\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./post.scss\";\nimport Comment from \"./comment/Comment\";\nimport { Link } from \"react-router-dom\";\n\nconst ViewPost = ({\n  post,\n  auth,\n  onDelete,\n  onEdit,\n  onReply,\n  onDeleteComment\n}) => {\n  const postDate = getFormattedDate(post.date);\n  var user_id = auth.isAuthenticated ? auth.user.id : \"\";\n  let comments = [];\n\n  for (let i = 0; i < post.comments.length; i++) {\n    comments.push( /*#__PURE__*/React.createElement(Comment, {\n      key: post.comments[i]._id,\n      auth: auth,\n      comment: post.comments[i],\n      onDelete: () => onDeleteComment(post.comments[i]._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-4 viewPost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-backward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), \"BACK\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  }, post.title))), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-4\",\n    style: {\n      whiteSpace: \"pre-wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, post.body)), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-column font-italic footerStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Created by : \", post.author.user_name), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Date: \", postDate)), auth.isAuthenticated && user_id === post.author.id ? /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-2\",\n    variant: \"outline-info\",\n    onClick: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-2\",\n    variant: \"outline-danger\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: onReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }, \"Reply\"))) : /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: onReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }\n  }, \"Reply\"))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-light bg-dark font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }, \"Comments\"), comments);\n};\n\nViewPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\nexport default ViewPost;","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/v1/blog-v6/client/src/components/posts/ViewPost.js"],"names":["React","PropTypes","getFormattedDate","Container","Row","Col","Button","Comment","Link","ViewPost","post","auth","onDelete","onEdit","onReply","onDeleteComment","postDate","date","user_id","isAuthenticated","user","id","comments","i","length","push","_id","title","whiteSpace","body","author","user_name","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport getFormattedDate from \"../../utils/getFormattedDate\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./post.scss\";\nimport Comment from \"./comment/Comment\";\nimport {Link} from \"react-router-dom\";\n\n\nconst ViewPost = ({ post, auth, onDelete, onEdit, onReply, onDeleteComment }) => {\n  const postDate = getFormattedDate(post.date);\n\n  var user_id = (auth.isAuthenticated) ? auth.user.id:\"\";\n\n  let comments = [];\n  for (let i = 0; i < post.comments.length; i++) {\n    comments.push(<Comment\n        key={post.comments[i]._id}\n        auth={auth}\n        comment={post.comments[i]}\n        onDelete={() => onDeleteComment(post.comments[i]._id)}\n    />);\n  }\n\n\n   return (\n      <Container className=\"mt-4 viewPost\">\n        <Row>\n          <Link to=\"/\">\n            <i className=\"fas fa-backward\"></i>\n                 BACK\n          </Link>\n        </Row>\n         <Row>\n            <Col className=\"text-center postTitle\">\n               <h2>{post.title}</h2>\n            </Col>\n         </Row>\n         <Row className=\"my-4\" style={{ whiteSpace: \"pre-wrap\" }}>\n            <Col>{post.body}</Col>\n         </Row>\n         <Row className=\"d-flex flex-column font-italic footerStyle\">\n            <Col>Created by : {post.author.user_name}</Col>\n            <Col>Date: {postDate}</Col>\n         </Row>\n\n         {(auth.isAuthenticated && user_id === post.author.id) ? (\n            <Row className=\"mt-4 mb-5\">\n               <Col className=\"text-center\">\n                  <Button\n                     className=\"mr-2\"\n                     variant=\"outline-info\"\n                     onClick={onEdit}\n                  >\n                     Edit\n                  </Button>\n                  <Button className=\"mr-2\" variant=\"outline-danger\"  onClick={onDelete}>\n                     Delete\n                  </Button>\n                 <Button variant=\"outline-success\" onClick={onReply}>\n                   Reply\n                 </Button>\n               </Col>\n            </Row>\n         ):\n             <Row className=\"mt-4 mb-5\">\n               <Col className=\"text-center\">\n                 <Button variant=\"outline-success\" onClick={onReply}>\n                   Reply\n                 </Button>\n                 {/*</Link>*/}\n               </Col>\n             </Row>\n         }\n         <p className=\"text-light bg-dark font-weight-bold\">Comments</p>\n        {comments}\n\n\n\n      </Container>\n   );\n};\n\n\n\n\nViewPost.propTypes = {\n   post: PropTypes.object.isRequired,\n   auth: PropTypes.object.isRequired,\n   onEdit: PropTypes.func.isRequired,\n   onDelete: PropTypes.func.isRequired\n};\n\n\n\nexport default ViewPost;\n"]},"metadata":{},"sourceType":"module"}