{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/v1/v6/client/src/containers/posts/CreatePostPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../actions/postActions\";\n\nconst CreatePostPage = ({\n  errors,\n  createPost,\n  loading,\n  history\n}) => {\n  const [post, setPost] = useState({\n    title: \"\",\n    body: \"\",\n    errors: {}\n  });\n  useEffect(() => {\n    setPost(post => {\n      return { ...post,\n        errors\n      };\n    });\n  }, [errors]);\n\n  const handleChange = e => {\n    setPost({ ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const error = { ...post.errors,\n      ...Validate(name, value).errors\n    };\n    setPost({ ...post,\n      errors: { ...error\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      title,\n      body\n    } = post; // console.log(post);\n\n    createPost(post, history);\n  };\n\n  return /*#__PURE__*/React.createElement(PostForm, {\n    loading: loading,\n    post: post,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  loading: state.post.postLoading,\n  errors: state.errors\n});\n\nCreatePostPage.propTypes = {\n  createPost: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, {\n  createPost\n})(CreatePostPage);","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/v1/v6/client/src/containers/posts/CreatePostPage.js"],"names":["React","useState","useEffect","PropTypes","PostForm","Validate","connect","createPost","CreatePostPage","errors","loading","history","post","setPost","title","body","handleChange","e","target","name","value","handleBlur","error","handleSubmit","preventDefault","mapStateToProps","state","postLoading","propTypes","func","isRequired","object","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUF,EAAAA,UAAV;AAAsBG,EAAAA,OAAtB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAClE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC9Ba,IAAAA,KAAK,EAAE,EADuB;AAE9BC,IAAAA,IAAI,EAAE,EAFwB;AAG9BN,IAAAA,MAAM,EAAE;AAHsB,GAAD,CAAhC;AAQAP,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,OAAO,CAACD,IAAI,IAAI;AACb,aAAO,EAAE,GAAGA,IAAL;AAAWH,QAAAA;AAAX,OAAP;AACF,KAFM,CAAP;AAGF,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAGC,CAAC,IAAI;AACvBJ,IAAAA,OAAO,CAAC,EACL,GAAGD,IADE;AAEL,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFrB,KAAD,CAAP;AAIF,GALD;;AAOA,QAAMC,UAAU,GAAGJ,CAAC,IAAI;AACrB,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,CAAC,CAACC,MAA1B;AACA,UAAMI,KAAK,GAAG,EAAE,GAAGV,IAAI,CAACH,MAAV;AAAkB,SAAGJ,QAAQ,CAACc,IAAD,EAAOC,KAAP,CAAR,CAAsBX;AAA3C,KAAd;AACAI,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWH,MAAAA,MAAM,EAAE,EAAE,GAAGa;AAAL;AAAnB,KAAD,CAAP;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAGN,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACO,cAAF;AACA,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,IAAxB,CAFuB,CAGvB;;AACAL,IAAAA,UAAU,CAACK,IAAD,EAAOD,OAAP,CAAV;AACF,GALD;;AAOA,sBACG,oBAAC,QAAD;AACG,IAAA,OAAO,EAAED,OADZ;AAEG,IAAA,IAAI,EAAEE,IAFT;AAGG,IAAA,QAAQ,EAAEI,YAHb;AAIG,IAAA,MAAM,EAAEK,UAJX;AAKG,IAAA,QAAQ,EAAEE,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AASF,CA5CD;;AA8CA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/BhB,EAAAA,OAAO,EAAEgB,KAAK,CAACd,IAAN,CAAWe,WADW;AAE/BlB,EAAAA,MAAM,EAAEiB,KAAK,CAACjB;AAFiB,CAAL,CAA7B;;AAKAD,cAAc,CAACoB,SAAf,GAA2B;AACxBrB,EAAAA,UAAU,EAAEJ,SAAS,CAAC0B,IAAV,CAAeC,UADH;AAExBrB,EAAAA,MAAM,EAAEN,SAAS,CAAC4B,MAAV,CAAiBD,UAFD;AAGxBpB,EAAAA,OAAO,EAAEP,SAAS,CAAC6B,IAAV,CAAeF;AAHA,CAA3B;AAMA,eAAexB,OAAO,CACnBmB,eADmB,EAEnB;AAAElB,EAAAA;AAAF,CAFmB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\nimport { createPost } from \"../../actions/postActions\";\n\nconst CreatePostPage = ({ errors, createPost, loading, history }) => {\n   const [post, setPost] = useState({\n      title: \"\",\n      body: \"\",\n      errors: {}\n   });\n\n\n\n   useEffect(() => {\n      setPost(post => {\n         return { ...post, errors };\n      });\n   }, [errors]);\n\n   const handleChange = e => {\n      setPost({\n         ...post,\n         [e.target.name]: e.target.value\n      });\n   };\n\n   const handleBlur = e => {\n      const { name, value } = e.target;\n      const error = { ...post.errors, ...Validate(name, value).errors };\n      setPost({ ...post, errors: { ...error } });\n   };\n\n   const handleSubmit = e => {\n      e.preventDefault();\n      const { title, body } = post;\n      // console.log(post);\n      createPost(post, history);\n   };\n\n   return (\n      <PostForm\n         loading={loading}\n         post={post}\n         onChange={handleChange}\n         onBlur={handleBlur}\n         onSubmit={handleSubmit}\n      />\n   );\n};\n\nconst mapStateToProps = state => ({\n   loading: state.post.postLoading,\n   errors: state.errors\n});\n\nCreatePostPage.propTypes = {\n   createPost: PropTypes.func.isRequired,\n   errors: PropTypes.object.isRequired,\n   loading: PropTypes.bool.isRequired\n};\n\nexport default connect(\n   mapStateToProps,\n   { createPost }\n)(CreatePostPage);\n"]},"metadata":{},"sourceType":"module"}