{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/susan/v6/client/src/containers/posts/ViewPostPage.js\";\nimport React, { useEffect } from \"react\";\nimport ViewPost from \"../../components/posts/ViewPost\";\nimport { deletePost, getPostByID } from \"../../actions/postActions\"; // import {getCommentByID} from \"../../actions/commentActions\";\n\nimport { deleteComment } from \"../../actions/commentActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst ViewPostPage = ({\n  auth,\n  post,\n  match,\n  history,\n  getPostByID,\n  deletePost,\n  deleteComment\n}) => {\n  // const [comment, setPost] = useState({\n  //    title: \"\",\n  //    body: \"\",\n  //    errors: {}\n  // });\n  // console.log(match);\n  useEffect(() => {\n    getPostByID(match.params.id);\n  }, [match, getPostByID]); // useEffect(() => {\n  //    getCommentByID(post.comments[0]);\n  //\n  // }, [match, getCommentByID]);\n  // useEffect(() => {\n  //       // getPostByID(match.params.id);\n  //    const comments = post.comments.map(commentID => getCommentByID(commentID))\n  //    console.log(comments)\n  //\n  //    }, [match, getPostByID]);\n  // console.log(post);\n  // console.log(post.comments);\n  // console.log(post.comments[0]);\n  // const a = JSON.stringify(post.comments);\n  // var a = post.comments[0]\n  // console.log(typeof a);\n  // const comments = post.comments.map(commentID => getCommentByID(commentID))\n  // console.log(a)\n  // console.log(a[1])\n  // console.log(post.comments)\n\n  const handleEdit = () => {\n    history.push(`/blog/post/update/${post._id}`);\n  };\n\n  const handleReply = () => {\n    history.push(`/blog/post/${post._id}/create_comment`);\n  };\n\n  const handleDelete = () => {\n    deletePost(post._id, history);\n  }; // const handleDelete = (postID) => {\n  //    deletePost(postID, history);\n  // };\n\n\n  const handleDeleteComment = commentID => {\n    deleteComment(post._id, commentID, history);\n  }; // console.log(post.comments[0]);\n\n\n  if (Object.keys(post).length === 0) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 47\n    }\n  });\n  return /*#__PURE__*/React.createElement(ViewPost, {\n    post: post,\n    auth: auth,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    onReply: handleReply,\n    onDeleteComment: handleDeleteComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post.post,\n  comment: state.comment.comment\n});\n\nViewPostPage.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getPostByID,\n  deletePost,\n  deleteComment\n})(ViewPostPage);","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v6/client/src/containers/posts/ViewPostPage.js"],"names":["React","useEffect","ViewPost","deletePost","getPostByID","deleteComment","connect","PropTypes","ViewPostPage","auth","post","match","history","params","id","handleEdit","push","_id","handleReply","handleDelete","handleDeleteComment","commentID","Object","keys","length","mapStateToProps","state","comment","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ViewPost from \"../../components/posts/ViewPost\";\nimport { deletePost, getPostByID } from \"../../actions/postActions\";\n// import {getCommentByID} from \"../../actions/commentActions\";\nimport {deleteComment} from \"../../actions/commentActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst ViewPostPage = ({\n   auth,\n   post,\n   match,\n   history,\n   getPostByID,\n   deletePost,\n   deleteComment,\n}) => {\n   // const [comment, setPost] = useState({\n   //    title: \"\",\n   //    body: \"\",\n   //    errors: {}\n   // });\n\n\n   // console.log(match);\n   useEffect(() => {\n      getPostByID(match.params.id);\n\n   }, [match, getPostByID]);\n\n\n   // useEffect(() => {\n   //    getCommentByID(post.comments[0]);\n   //\n   // }, [match, getCommentByID]);\n   // useEffect(() => {\n   //       // getPostByID(match.params.id);\n   //    const comments = post.comments.map(commentID => getCommentByID(commentID))\n   //    console.log(comments)\n   //\n   //    }, [match, getPostByID]);\n\n   // console.log(post);\n   // console.log(post.comments);\n   // console.log(post.comments[0]);\n   // const a = JSON.stringify(post.comments);\n\n   // var a = post.comments[0]\n   // console.log(typeof a);\n   // const comments = post.comments.map(commentID => getCommentByID(commentID))\n   // console.log(a)\n   // console.log(a[1])\n   // console.log(post.comments)\n\n   const handleEdit = () => {\n      history.push(`/blog/post/update/${post._id}`);\n   };\n\n   const handleReply = () => {\n      history.push(`/blog/post/${post._id}/create_comment`);\n   };\n\n   const handleDelete = () => {\n      deletePost(post._id, history);\n   };\n   // const handleDelete = (postID) => {\n   //    deletePost(postID, history);\n   // };\n\n   const handleDeleteComment = (commentID) => {\n      deleteComment(post._id,commentID,history)\n   }\n\n   // console.log(post.comments[0]);\n   if (Object.keys(post).length === 0) return <div />;\n   return (\n      <ViewPost\n         post={post}\n         auth={auth}\n         onDelete={handleDelete}\n         onEdit={handleEdit}\n         onReply={handleReply}\n         onDeleteComment={handleDeleteComment}\n\n      />\n   );\n};\n\nconst mapStateToProps = state => ({\n   auth: state.auth,\n   post: state.post.post,\n   comment:state.comment.comment\n});\n\nViewPostPage.propTypes = {\n   auth: PropTypes.object.isRequired,\n   post: PropTypes.object.isRequired,\n   getPostByID: PropTypes.func.isRequired,\n   deletePost: PropTypes.func.isRequired,\n   deleteComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n   mapStateToProps,\n   { getPostByID, deletePost, deleteComment}\n)(ViewPostPage);\n"]},"metadata":{},"sourceType":"module"}