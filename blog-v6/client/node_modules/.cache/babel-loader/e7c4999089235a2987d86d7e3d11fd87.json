{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_COMMENT, GET_COMMENT, TOGGLE_POSTS_LOADING, TOGGLE_POST_LOADING, GET_POST, DELETE_POST } from \"./types\";\nimport { setErrors, clearErrors } from \"./errorActions\"; // '/api/posts/:id/comments'\n\nexport const createComment = (commentData, history, postId) => dispatch => {\n  // dispatch(togglePostLoading());\n  // console.log(commentData);\n  // console.log(\"commentData:\"+ JSON.stringify(commentData));\n  // console.log(\"history:\"+ JSON.stringify(history));\n  // console.log(\"postid:\"+postId);\n  // app.use('/api/comments', comments);\n  axios.post(`/api/comments/${postId}/create`, commentData) // .post(`/api/posts/${postId}/comments/create`, commentData)\n  .then(res => {\n    // console.log(\"send:\"+res)\n    dispatch({\n      type: CREATE_COMMENT,\n      payload: res.data\n    }); // dispatch(togglePostLoading());\n\n    history.push(`/blog/post/${postId}`);\n  }).catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data)); // dispatch(togglePostLoading());\n  });\n}; // router.get('/get/:id', (req, res) => {\n// export const getCommentByID = (id) => dispatch => {\n//   dispatch(togglePostLoading());\n//   console.log(id);\n//   axios\n//   .get(`/api/comments/get/${id}`)\n//   .then(res => {\n//     console.log(res)\n//     dispatch({\n//       type: GET_COMMENT,\n//       payload: res.data\n//     });\n//     dispatch(clearErrors());\n//     dispatch(togglePostLoading());\n//   })\n//\n//   .catch(err => {\n//     dispatch(setErrors(err.response.data));\n//     dispatch(togglePostLoading());\n//   });\n// };\n\nexport const deleteComment = (id, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.delete(`/api/posts/delete/${id}`).then(res => {\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const togglePostLoading = () => {\n  return {\n    type: TOGGLE_POST_LOADING\n  };\n};\nexport const togglePostsLoading = () => {\n  return {\n    type: TOGGLE_POSTS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v6/client/src/actions/commentActions.js"],"names":["axios","CREATE_COMMENT","GET_COMMENT","TOGGLE_POSTS_LOADING","TOGGLE_POST_LOADING","GET_POST","DELETE_POST","setErrors","clearErrors","createComment","commentData","history","postId","dispatch","post","then","res","type","payload","data","push","catch","err","response","deleteComment","id","togglePostLoading","delete","togglePostsLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,mBAJF,EAIuBC,QAJvB,EAIiCC,WAJjC,QAKO,SALP;AAOA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,gBAAvC,C,CAEA;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,WAAD,EAAcC,OAAd,EAAuBC,MAAvB,KAAkCC,QAAQ,IAAI;AACzE;AACA;AACA;AACA;AACA;AACA;AACAb,EAAAA,KAAK,CACJc,IADD,CACO,iBAAgBF,MAAO,SAD9B,EACwCF,WADxC,EAEA;AAFA,GAGCK,IAHD,CAGMC,GAAG,IAAI;AACX;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEhB,cADC;AAEPiB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR,CAFW,CAOX;;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAc,cAAaR,MAAO,EAAlC;AACD,GAZD,EAaCS,KAbD,CAaOC,GAAG,IAAI;AACZ;AACAT,IAAAA,QAAQ,CAACN,SAAS,CAACe,GAAG,CAACC,QAAJ,CAAaJ,IAAd,CAAV,CAAR,CAFY,CAGZ;AACD,GAjBD;AAkBD,CAzBM,C,CA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,aAAa,GAAG,CAACC,EAAD,EAAKd,OAAL,KAAiBE,QAAQ,IAAI;AACxDA,EAAAA,QAAQ,CAACa,iBAAiB,EAAlB,CAAR;AACA1B,EAAAA,KAAK,CACJ2B,MADD,CACS,qBAAoBF,EAAG,EADhC,EAECV,IAFD,CAEMC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAIAZ,IAAAA,QAAQ,CAACa,iBAAiB,EAAlB,CAAR;AACAf,IAAAA,OAAO,CAACS,IAAR,CAAa,OAAb;AACD,GATD,EAUCC,KAVD,CAUOC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CAACN,SAAS,CAACe,GAAG,CAACC,QAAJ,CAAaJ,IAAd,CAAV,CAAR;AACAN,IAAAA,QAAQ,CAACa,iBAAiB,EAAlB,CAAR;AACD,GAbD;AAcD,CAhBM;AAkBP,OAAO,MAAMA,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLT,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMwB,kBAAkB,GAAG,MAAM;AACtC,SAAO;AACLX,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\nimport {\n  CREATE_COMMENT,\n  GET_COMMENT,\n  TOGGLE_POSTS_LOADING,\n  TOGGLE_POST_LOADING, GET_POST, DELETE_POST,\n} from \"./types\";\n\nimport { setErrors, clearErrors } from \"./errorActions\";\n\n// '/api/posts/:id/comments'\n\nexport const createComment = (commentData, history, postId) => dispatch => {\n  // dispatch(togglePostLoading());\n  // console.log(commentData);\n  // console.log(\"commentData:\"+ JSON.stringify(commentData));\n  // console.log(\"history:\"+ JSON.stringify(history));\n  // console.log(\"postid:\"+postId);\n  // app.use('/api/comments', comments);\n  axios\n  .post(`/api/comments/${postId}/create`, commentData)\n  // .post(`/api/posts/${postId}/comments/create`, commentData)\n  .then(res => {\n    // console.log(\"send:\"+res)\n    dispatch({\n      type: CREATE_COMMENT,\n      payload: res.data\n    });\n\n    // dispatch(togglePostLoading());\n    history.push(`/blog/post/${postId}`);\n  })\n  .catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data));\n    // dispatch(togglePostLoading());\n  });\n};\n\n\n// router.get('/get/:id', (req, res) => {\n// export const getCommentByID = (id) => dispatch => {\n//   dispatch(togglePostLoading());\n//   console.log(id);\n//   axios\n//   .get(`/api/comments/get/${id}`)\n//   .then(res => {\n//     console.log(res)\n//     dispatch({\n//       type: GET_COMMENT,\n//       payload: res.data\n//     });\n//     dispatch(clearErrors());\n//     dispatch(togglePostLoading());\n//   })\n//\n//   .catch(err => {\n//     dispatch(setErrors(err.response.data));\n//     dispatch(togglePostLoading());\n//   });\n// };\n\nexport const deleteComment = (id, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios\n  .delete(`/api/posts/delete/${id}`)\n  .then(res => {\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  })\n  .catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\n\nexport const togglePostLoading = () => {\n  return {\n    type: TOGGLE_POST_LOADING\n  };\n};\n\nexport const togglePostsLoading = () => {\n  return {\n    type: TOGGLE_POSTS_LOADING\n  };\n};"]},"metadata":{},"sourceType":"module"}