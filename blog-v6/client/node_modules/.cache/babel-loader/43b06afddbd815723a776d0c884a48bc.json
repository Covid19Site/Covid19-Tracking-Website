{"ast":null,"code":"import { RESET_POST, CREATE_POST, GET_POST, GET_POSTS, UPDATE_POST, DELETE_POST, TOGGLE_POSTS_LOADING, TOGGLE_POST_LOADING } from \"../actions/types\";\nconst initialState = {\n  post: {},\n  posts: [],\n  postLoading: false,\n  postsLoading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case GET_POSTS:\n      return { ...state,\n        post: {},\n        posts: [...action.payload]\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: { ...action.payload[0]\n        }\n      };\n\n    case UPDATE_POST:\n      const posts = state.posts.filter(post => post._id !== action.payload._id);\n      return { ...state,\n        post: {},\n        posts: [...posts, action.payload]\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    case TOGGLE_POST_LOADING:\n      return { ...state,\n        postLoading: !state.postLoading\n      };\n\n    case TOGGLE_POSTS_LOADING:\n      return { ...state,\n        postsLoading: !state.postsLoading\n      };\n\n    case RESET_POST:\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v6/client/src/reducers/postReducer.js"],"names":["RESET_POST","CREATE_POST","GET_POST","GET_POSTS","UPDATE_POST","DELETE_POST","TOGGLE_POSTS_LOADING","TOGGLE_POST_LOADING","initialState","post","posts","postLoading","postsLoading","state","action","type","payload","filter","_id"],"mappings":"AAAA,SACGA,UADH,EAEGC,WAFH,EAGGC,QAHH,EAIGC,SAJH,EAKGC,WALH,EAMGC,WANH,EAOGC,oBAPH,EAQGC,mBARH,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,WAAW,EAAE,KAHK;AAIlBC,EAAAA,YAAY,EAAE;AAJI,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKd,WAAL;AACG,aAAO,EACJ,GAAGY,KADC;AAEJH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAFH,OAAP;;AAIH,SAAKb,SAAL;AACG,aAAO,EACJ,GAAGU,KADC;AAEJJ,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,KAAK,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;AAHH,OAAP;;AAKH,SAAKd,QAAL;AACG,aAAO,EACJ,GAAGW,KADC;AAEJJ,QAAAA,IAAI,EAAE,EAAE,GAAGK,MAAM,CAACE,OAAP,CAAe,CAAf;AAAL;AAFF,OAAP;;AAIH,SAAKZ,WAAL;AACG,YAAMM,KAAK,GAAGG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CACXR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaJ,MAAM,CAACE,OAAP,CAAeE,GADzB,CAAd;AAGA,aAAO,EACJ,GAAGL,KADC;AAEJJ,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWI,MAAM,CAACE,OAAlB;AAHH,OAAP;;AAKH,SAAKX,WAAL;AACG,aAAO,EACJ,GAAGQ,KADC;AAEJH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaJ,MAAM,CAACE,OAA/C;AAFH,OAAP;;AAIH,SAAKT,mBAAL;AACG,aAAO,EACJ,GAAGM,KADC;AAEJF,QAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFhB,OAAP;;AAIH,SAAKL,oBAAL;AACG,aAAO,EACJ,GAAGO,KADC;AAEJD,QAAAA,YAAY,EAAE,CAACC,KAAK,CAACD;AAFjB,OAAP;;AAIH,SAAKZ,UAAL;AACG,aAAOQ,YAAP;;AACH;AACG,aAAOK,KAAP;AA5CN;AA8CF","sourcesContent":["import {\n   RESET_POST,\n   CREATE_POST,\n   GET_POST,\n   GET_POSTS,\n   UPDATE_POST,\n   DELETE_POST,\n   TOGGLE_POSTS_LOADING,\n   TOGGLE_POST_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n   post: {},\n   posts: [],\n   postLoading: false,\n   postsLoading: false\n};\n\nexport default function(state = initialState, action) {\n   switch (action.type) {\n      case CREATE_POST:\n         return {\n            ...state,\n            posts: [...state.posts, action.payload]\n         };\n      case GET_POSTS:\n         return {\n            ...state,\n            post: {},\n            posts: [...action.payload]\n         };\n      case GET_POST:\n         return {\n            ...state,\n            post: { ...action.payload[0] }\n         };\n      case UPDATE_POST:\n         const posts = state.posts.filter(\n            post => post._id !== action.payload._id\n         );\n         return {\n            ...state,\n            post: {},\n            posts: [...posts, action.payload]\n         };\n      case DELETE_POST:\n         return {\n            ...state,\n            posts: state.posts.filter(post => post._id !== action.payload)\n         };\n      case TOGGLE_POST_LOADING:\n         return {\n            ...state,\n            postLoading: !state.postLoading\n         };\n      case TOGGLE_POSTS_LOADING:\n         return {\n            ...state,\n            postsLoading: !state.postsLoading\n         };\n      case RESET_POST:\n         return initialState;\n      default:\n         return state;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}