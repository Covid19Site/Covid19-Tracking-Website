{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/susan/v6/client/src/components/posts/ViewPost.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport getFormattedDate from \"../../utils/getFormattedDate\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./post.scss\";\nimport Comment from \"./comment/Comment\";\nimport { Link } from \"react-router-dom\";\nimport ListComment from \"./comment/ListComment\";\nimport { getCommentByID } from \"../../actions/commentActions\";\n\nconst ViewPost = ({\n  post,\n  auth,\n  onDelete,\n  onEdit,\n  onReply\n}) => {\n  const postDate = getFormattedDate(post.date); // console.log(post.author);\n  // console.log(JSON.stringify(auth.user.user_name));\n\n  var user_id = auth.isAuthenticated ? JSON.stringify(auth.user.id).slice(1, -1) : \"\"; // console.log(post.author);\n  // console.log(user_id);\n  // console.log(post.author.id === user_id);\n\n  console.log(post.comments);\n  console.log(post.comments[0]);\n  console.log(post.comments[1]);\n  console.log(post.comments[1].author.user_name);\n  console.log(post.comments.length); //false???\n\n  const comments = {}; // console.log(comments)\n  // comments.map(comment => (\n  //    console.log(comment)\n  //\n  // ))\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-4 viewPost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  }, post.title))), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-4\",\n    style: {\n      whiteSpace: \"pre-wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, post.body)), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-column font-italic footerStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Created by : \", post.author.user_name), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Date: \", postDate)), auth.isAuthenticated && user_id === post.author.id ? /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-2\",\n    variant: \"outline-info\",\n    onClick: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-2\",\n    variant: \"outline-danger\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: onReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }\n  }, \"Reply\"))) : /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: onReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }\n  }, \"Reply\"))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-light bg-dark font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, \"Comments\"));\n};\n\nViewPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\nexport default ViewPost;","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v6/client/src/components/posts/ViewPost.js"],"names":["React","PropTypes","getFormattedDate","Container","Row","Col","Button","Comment","Link","ListComment","getCommentByID","ViewPost","post","auth","onDelete","onEdit","onReply","postDate","date","user_id","isAuthenticated","JSON","stringify","user","id","slice","console","log","comments","author","user_name","length","title","whiteSpace","body","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport getFormattedDate from \"../../utils/getFormattedDate\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./post.scss\";\nimport Comment from \"./comment/Comment\";\nimport {Link} from \"react-router-dom\";\nimport ListComment from \"./comment/ListComment\";\nimport {getCommentByID} from \"../../actions/commentActions\";\n\nconst ViewPost = ({ post, auth, onDelete, onEdit, onReply }) => {\n   const postDate = getFormattedDate(post.date);\n   // console.log(post.author);\n   // console.log(JSON.stringify(auth.user.user_name));\n  var user_id = (auth.isAuthenticated) ? JSON.stringify(auth.user.id).slice(1,-1):\"\"\n  // console.log(post.author);\n  // console.log(user_id);\n  // console.log(post.author.id === user_id);\n  console.log(post.comments);\n  console.log(post.comments[0]);\n  console.log(post.comments[1]);\n  console.log(post.comments[1].author.user_name);\n  console.log(post.comments.length);\n\n   //false???\n  const comments = {\n    \n  }\n\n  // console.log(comments)\n  // comments.map(comment => (\n  //    console.log(comment)\n  //\n  // ))\n\n   return (\n      <Container className=\"mt-4 viewPost\">\n         <Row>\n            <Col className=\"text-center postTitle\">\n               <h2>{post.title}</h2>\n            </Col>\n         </Row>\n         <Row className=\"my-4\" style={{ whiteSpace: \"pre-wrap\" }}>\n            <Col>{post.body}</Col>\n         </Row>\n         <Row className=\"d-flex flex-column font-italic footerStyle\">\n            <Col>Created by : {post.author.user_name}</Col>\n            <Col>Date: {postDate}</Col>\n         </Row>\n\n         {(auth.isAuthenticated && user_id === post.author.id) ? (\n            <Row className=\"mt-4 mb-5\">\n               <Col className=\"text-center\">\n                  <Button\n                     className=\"mr-2\"\n                     variant=\"outline-info\"\n                     onClick={onEdit}\n                  >\n                     Edit\n                  </Button>\n                  <Button className=\"mr-2\" variant=\"outline-danger\"  onClick={onDelete}>\n                     Delete\n                  </Button>\n                 {/*TODO: onclick = onComment*/}\n                 <Button variant=\"outline-success\" onClick={onReply}>\n                   Reply\n                 </Button>\n               </Col>\n            </Row>\n         ):\n             <Row className=\"mt-4 mb-5\">\n               <Col className=\"text-center\">\n                 {/*TODO: onclick = onComment*/}\n                 {/*<Link to=\"/blog/post/${post._id}/create_comment\">*/}\n                 <Button variant=\"outline-success\" onClick={onReply}>\n                   Reply\n                 </Button>\n                 {/*</Link>*/}\n               </Col>\n             </Row>\n         }\n         <p className=\"text-light bg-dark font-weight-bold\">Comments</p>\n\n\n         {/*</Comment>*/}\n\n        {/*<ListComment*/}\n        {/*    auth={auth}*/}\n        {/*    comment={comments}*/}\n        {/*    onDelete={onDelete}*/}\n        {/*    onEdit={onEdit}*/}\n        {/*>*/}\n\n        {/*</ListComment>*/}\n\n        {/*console.log(post.comments[1]);*/}\n        {/*console.log(post.comments[1].author);*/}\n      </Container>\n   );\n};\n\nViewPost.propTypes = {\n   post: PropTypes.object.isRequired,\n   auth: PropTypes.object.isRequired,\n   onEdit: PropTypes.func.isRequired,\n   onDelete: PropTypes.func.isRequired\n};\n\nexport default ViewPost;\n"]},"metadata":{},"sourceType":"module"}