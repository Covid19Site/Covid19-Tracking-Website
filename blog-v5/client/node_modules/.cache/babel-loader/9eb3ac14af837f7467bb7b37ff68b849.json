{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_POST, GET_POST, GET_POSTS, UPDATE_POST, DELETE_POST, TOGGLE_POSTS_LOADING, TOGGLE_POST_LOADING, RESET_POST } from \"./types\";\nimport { setErrors, clearErrors } from \"./errorActions\";\nexport const createComment = (commentData, history, postId) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.post(\"/api/comments/create\", commentData, {\n    params: {\n      id: postId\n    }\n  }).then(res => {\n    console.log(res);\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog/post/\".concat(postId));\n  }).catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const createPost = (postData, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.post(\"/api/posts/create\", postData).then(res => {\n    console.log(postData); // console.log(res)\n\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const getPostByID = id => dispatch => {\n  dispatch(togglePostLoading());\n  axios.get(\"/api/posts/post/\".concat(id)).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    dispatch(togglePostLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const getPostsByAuthor = author => dispatch => {\n  dispatch(togglePostsLoading());\n  axios.get(\"/api/posts/author/\".concat(author)).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(togglePostsLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostsLoading());\n  });\n};\nexport const getPosts = () => dispatch => {\n  dispatch(togglePostsLoading());\n  axios.get(\"/api/posts/\").then(res => {\n    console.log(res);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    dispatch(togglePostsLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostsLoading());\n  });\n};\nexport const updatePost = (id, postData, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.patch(\"/api/posts/update/\".concat(id), postData).then(res => {\n    dispatch({\n      type: UPDATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog/post/\".concat(res.data._id));\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const deletePost = (id, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.delete(\"/api/posts/delete/\".concat(id)).then(res => {\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const resetPost = () => {\n  return {\n    type: RESET_POST\n  };\n};\nexport const togglePostLoading = () => {\n  return {\n    type: TOGGLE_POST_LOADING\n  };\n};\nexport const togglePostsLoading = () => {\n  return {\n    type: TOGGLE_POSTS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/actions/postActions.js"],"names":["axios","CREATE_POST","GET_POST","GET_POSTS","UPDATE_POST","DELETE_POST","TOGGLE_POSTS_LOADING","TOGGLE_POST_LOADING","RESET_POST","setErrors","clearErrors","createComment","commentData","history","postId","dispatch","togglePostLoading","post","params","id","then","res","console","log","type","payload","data","push","catch","err","response","createPost","postData","getPostByID","get","getPostsByAuthor","author","togglePostsLoading","getPosts","updatePost","patch","_id","deletePost","delete","resetPost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n   CREATE_POST,\n   GET_POST,\n   GET_POSTS,\n   UPDATE_POST,\n   DELETE_POST,\n   TOGGLE_POSTS_LOADING,\n   TOGGLE_POST_LOADING,\n   RESET_POST\n} from \"./types\";\n\nimport { setErrors, clearErrors } from \"./errorActions\";\n\nexport const createComment = (commentData, history, postId) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n   .post(\"/api/comments/create\", commentData, { params: {\n         id:postId\n      }})\n   .then(res => {\n      console.log(res)\n      dispatch({\n         type: CREATE_POST,\n         payload: res.data\n      });\n\n      dispatch(togglePostLoading());\n      history.push(`/blog/post/${postId}`);\n   })\n   .catch(err => {\n      // console.log(err)\n      dispatch(setErrors(err.response.data));\n      dispatch(togglePostLoading());\n   });\n};\n\nexport const createPost = (postData, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .post(\"/api/posts/create\", postData)\n      .then(res => {\n         console.log(postData)\n         // console.log(res)\n         dispatch({\n            type: CREATE_POST,\n            payload: res.data\n         });\n\n         dispatch(togglePostLoading());\n         history.push(\"/blog\");\n      })\n      .catch(err => {\n         // console.log(err)\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const getPostByID = id => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .get(`/api/posts/post/${id}`)\n      .then(res => {\n         dispatch({\n            type: GET_POST,\n            payload: res.data\n         });\n         dispatch(clearErrors());\n         dispatch(togglePostLoading());\n      })\n\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const getPostsByAuthor = author => dispatch => {\n   dispatch(togglePostsLoading());\n   axios\n      .get(`/api/posts/author/${author}`)\n      .then(res => {\n         dispatch({\n            type: GET_POSTS,\n            payload: res.data\n         });\n         dispatch(togglePostsLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostsLoading());\n      });\n};\n\nexport const getPosts = () => dispatch => {\n   dispatch(togglePostsLoading());\n   axios\n      .get(`/api/posts/`)\n      .then(res => {\n         console.log(res)\n         dispatch({\n            type: GET_POSTS,\n            payload: res.data\n         });\n         dispatch(clearErrors());\n         dispatch(togglePostsLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostsLoading());\n      });\n};\n\nexport const updatePost = (id, postData, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .patch(`/api/posts/update/${id}`, postData)\n      .then(res => {\n         dispatch({\n            type: UPDATE_POST,\n            payload: res.data\n         });\n         dispatch(togglePostLoading());\n         history.push(`/blog/post/${res.data._id}`);\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const deletePost = (id, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .delete(`/api/posts/delete/${id}`)\n      .then(res => {\n         dispatch({\n            type: DELETE_POST,\n            payload: id\n         });\n         dispatch(togglePostLoading());\n         history.push(\"/blog\");\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const resetPost = () => {\n   return {\n      type: RESET_POST\n   };\n};\n\nexport const togglePostLoading = () => {\n   return {\n      type: TOGGLE_POST_LOADING\n   };\n};\n\nexport const togglePostsLoading = () => {\n   return {\n      type: TOGGLE_POSTS_LOADING\n   };\n};\n"]},"metadata":{},"sourceType":"module"}