{"ast":null,"code":"import _defineProperty from \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/containers/posts/CreateCommentPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\"; // import { createPost } from \"../../actions/postActions\";\n\nimport CommentForm from \"../../components/posts/comment/CommentForm\";\nimport { createComment } from \"../../actions/postActions\";\nimport { getPostByID } from \"../../actions/postActions\";\n\nconst CreateCommentPage = ({\n  post,\n  errors,\n  createComment,\n  loading,\n  history,\n  getPostByID,\n  match\n}) => {\n  const _useState = useState({\n    // title: \"\",\n    body: \"\",\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        comment = _useState2[0],\n        setComment = _useState2[1];\n\n  useEffect(() => {\n    getPostByID(match.params.id);\n  }, [match, getPostByID]);\n  useEffect(() => {\n    setComment(comment => {\n      return _objectSpread({}, comment, {\n        errors\n      });\n    });\n  }, [errors]);\n\n  const handleChange = e => {\n    setComment(_objectSpread({}, comment, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleBlur = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    const error = _objectSpread({}, comment.errors, {}, Validate(name, value).errors);\n\n    setComment(_objectSpread({}, comment, {\n      errors: _objectSpread({}, error)\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const body = comment.body; // console.log(JSON.stringify(post));\n\n    createComment({\n      body\n    }, history, post._id);\n  };\n\n  return React.createElement(CommentForm, {\n    loading: loading,\n    post: comment,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  loading: state.post.postLoading,\n  errors: state.errors,\n  post: state.post.post\n}); // const mapStateToProps = state => ({\n//   auth: state.auth,\n//   post: state.post.post\n// });\n\n\nCreateCommentPage.propTypes = {\n  createComment: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  getPostByID: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getPostByID,\n  createComment\n})(CreateCommentPage);","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/containers/posts/CreateCommentPage.js"],"names":["React","useState","useEffect","PropTypes","PostForm","Validate","connect","CommentForm","createComment","getPostByID","CreateCommentPage","post","errors","loading","history","match","body","comment","setComment","params","id","handleChange","e","target","name","value","handleBlur","error","handleSubmit","preventDefault","_id","mapStateToProps","state","postLoading","propTypes","func","isRequired","object","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\n// import { createPost } from \"../../actions/postActions\";\nimport CommentForm from \"../../components/posts/comment/CommentForm\";\nimport { createComment } from \"../../actions/postActions\";\nimport { getPostByID } from \"../../actions/postActions\";\n\nconst CreateCommentPage = ({ post, errors, createComment, loading, history, getPostByID,\n  match, }) => {\n  const [comment, setComment] = useState({\n    // title: \"\",\n    body: \"\",\n    errors: {}\n  });\n\n  useEffect(() => {\n    getPostByID(match.params.id);\n  }, [match, getPostByID]);\n\n  useEffect(() => {\n    setComment(comment => {\n      return { ...comment, errors };\n    });\n  }, [errors]);\n\n  const handleChange = e => {\n    setComment({\n      ...comment,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n    const error = { ...comment.errors, ...Validate(name, value).errors };\n    setComment({ ...comment, errors: { ...error } });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { body } = comment;\n    // console.log(JSON.stringify(post));\n    createComment({ body }, history, post._id);\n\n  };\n\n  return (\n      <CommentForm\n          loading={loading}\n          post={comment}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onSubmit={handleSubmit}\n      />\n  );\n};\n\nconst mapStateToProps = state => ({\n  loading: state.post.postLoading,\n  errors: state.errors,\n  post: state.post.post\n});\n\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   post: state.post.post\n// });\n\nCreateCommentPage.propTypes = {\n  createComment: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    { getPostByID, createComment }\n)(CreateCommentPage);\n"]},"metadata":{},"sourceType":"module"}