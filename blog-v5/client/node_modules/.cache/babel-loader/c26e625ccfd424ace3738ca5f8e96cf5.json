{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_POST, GET_POST, GET_POSTS, UPDATE_POST, DELETE_POST, TOGGLE_POSTS_LOADING, TOGGLE_POST_LOADING, RESET_POST, CREATE_COMMENT } from \"./types\";\nimport { setErrors, clearErrors } from \"./errorActions\"; // '/api/posts/:id/comments'\n\nexport const createComment = (commentData, history, postId) => dispatch => {\n  // dispatch(togglePostLoading());\n  console.log(commentData);\n  console.log(\"commentData:\" + JSON.stringify(commentData));\n  console.log(\"history:\" + JSON.stringify(history));\n  console.log(\"postid:\" + postId);\n  axios.post(\"/api/posts/\".concat(postId, \"/comments/create\"), commentData).then(res => {\n    console.log(\"send:\" + res);\n    dispatch({\n      type: CREATE_COMMENT,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog/post/\".concat(postId));\n  }).catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const createPost = (postData, history) => dispatch => {\n  dispatch(togglePostLoading());\n  console.log(postData);\n  axios.post(\"/api/posts/create\", postData).then(res => {\n    // console.log(postData)\n    // console.log(res)\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const getPostByID = id => dispatch => {\n  dispatch(togglePostLoading());\n  axios.get(\"/api/posts/post/\".concat(id)).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    dispatch(togglePostLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const getPostsByAuthor = author => dispatch => {\n  dispatch(togglePostsLoading());\n  axios.get(\"/api/posts/author/\".concat(author)).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(togglePostsLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostsLoading());\n  });\n};\nexport const getPosts = () => dispatch => {\n  dispatch(togglePostsLoading());\n  axios.get(\"/api/posts/\").then(res => {\n    console.log(res);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    dispatch(togglePostsLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostsLoading());\n  });\n};\nexport const updatePost = (id, postData, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.patch(\"/api/posts/update/\".concat(id), postData).then(res => {\n    dispatch({\n      type: UPDATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog/post/\".concat(res.data._id));\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const deletePost = (id, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.delete(\"/api/posts/delete/\".concat(id)).then(res => {\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const resetPost = () => {\n  return {\n    type: RESET_POST\n  };\n};\nexport const togglePostLoading = () => {\n  return {\n    type: TOGGLE_POST_LOADING\n  };\n};\nexport const togglePostsLoading = () => {\n  return {\n    type: TOGGLE_POSTS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/actions/postActions.js"],"names":["axios","CREATE_POST","GET_POST","GET_POSTS","UPDATE_POST","DELETE_POST","TOGGLE_POSTS_LOADING","TOGGLE_POST_LOADING","RESET_POST","CREATE_COMMENT","setErrors","clearErrors","createComment","commentData","history","postId","dispatch","console","log","JSON","stringify","post","then","res","type","payload","data","togglePostLoading","push","catch","err","response","createPost","postData","getPostByID","id","get","getPostsByAuthor","author","togglePostsLoading","getPosts","updatePost","patch","_id","deletePost","delete","resetPost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n   CREATE_POST,\n   GET_POST,\n   GET_POSTS,\n   UPDATE_POST,\n   DELETE_POST,\n   TOGGLE_POSTS_LOADING,\n   TOGGLE_POST_LOADING,\n   RESET_POST, CREATE_COMMENT\n} from \"./types\";\n\nimport { setErrors, clearErrors } from \"./errorActions\";\n\n// '/api/posts/:id/comments'\n\nexport const createComment = (commentData, history, postId) => dispatch => {\n   // dispatch(togglePostLoading());\n   console.log(commentData);\n   console.log(\"commentData:\"+ JSON.stringify(commentData));\n   console.log(\"history:\"+ JSON.stringify(history));\n   console.log(\"postid:\"+postId);\n\n   axios\n   .post(`/api/posts/${postId}/comments/create`, commentData)\n   .then(res => {\n      console.log(\"send:\"+res)\n      dispatch({\n         type: CREATE_COMMENT,\n         payload: res.data\n      });\n\n      dispatch(togglePostLoading());\n      history.push(`/blog/post/${postId}`);\n   })\n   .catch(err => {\n      // console.log(err)\n      dispatch(setErrors(err.response.data));\n      dispatch(togglePostLoading());\n   });\n};\n\nexport const createPost = (postData, history) => dispatch => {\n   dispatch(togglePostLoading());\n   console.log(postData);\n   axios\n      .post(\"/api/posts/create\", postData)\n      .then(res => {\n         // console.log(postData)\n         // console.log(res)\n         dispatch({\n            type: CREATE_POST,\n            payload: res.data\n         });\n\n         dispatch(togglePostLoading());\n         history.push(\"/blog\");\n      })\n      .catch(err => {\n         // console.log(err)\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const getPostByID = id => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .get(`/api/posts/post/${id}`)\n      .then(res => {\n         dispatch({\n            type: GET_POST,\n            payload: res.data\n         });\n         dispatch(clearErrors());\n         dispatch(togglePostLoading());\n      })\n\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const getPostsByAuthor = author => dispatch => {\n   dispatch(togglePostsLoading());\n   axios\n      .get(`/api/posts/author/${author}`)\n      .then(res => {\n         dispatch({\n            type: GET_POSTS,\n            payload: res.data\n         });\n         dispatch(togglePostsLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostsLoading());\n      });\n};\n\nexport const getPosts = () => dispatch => {\n   dispatch(togglePostsLoading());\n   axios\n      .get(`/api/posts/`)\n      .then(res => {\n         console.log(res)\n         dispatch({\n            type: GET_POSTS,\n            payload: res.data\n         });\n         dispatch(clearErrors());\n         dispatch(togglePostsLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostsLoading());\n      });\n};\n\nexport const updatePost = (id, postData, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .patch(`/api/posts/update/${id}`, postData)\n      .then(res => {\n         dispatch({\n            type: UPDATE_POST,\n            payload: res.data\n         });\n         dispatch(togglePostLoading());\n         history.push(`/blog/post/${res.data._id}`);\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const deletePost = (id, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .delete(`/api/posts/delete/${id}`)\n      .then(res => {\n         dispatch({\n            type: DELETE_POST,\n            payload: id\n         });\n         dispatch(togglePostLoading());\n         history.push(\"/blog\");\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const resetPost = () => {\n   return {\n      type: RESET_POST\n   };\n};\n\nexport const togglePostLoading = () => {\n   return {\n      type: TOGGLE_POST_LOADING\n   };\n};\n\nexport const togglePostsLoading = () => {\n   return {\n      type: TOGGLE_POSTS_LOADING\n   };\n};\n"]},"metadata":{},"sourceType":"module"}