{"ast":null,"code":"import _defineProperty from \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/containers/posts/CreateCommentPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\"; // import { createPost } from \"../../actions/postActions\";\n\nimport CommentForm from \"../../components/posts/comment/CommentForm\";\nimport { createComment } from \"../../actions/postActions\";\n\nconst CreateCommentPage = ({\n  errors,\n  createComment,\n  loading,\n  history\n}) => {\n  const _useState = useState({\n    // title: \"\",\n    body: \"\",\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        comment = _useState2[0],\n        setComment = _useState2[1];\n\n  useEffect(() => {\n    setComment(comment => {\n      return _objectSpread({}, comment, {\n        errors\n      });\n    });\n  }, [errors]);\n\n  const handleChange = e => {\n    setComment(_objectSpread({}, comment, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleBlur = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n    const error = _objectSpread({}, comment.errors, {}, Validate(name, value).errors);\n\n    setComment(_objectSpread({}, comment, {\n      errors: _objectSpread({}, error)\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const body = comment.body;\n    createComment({\n      body\n    }, history);\n  };\n\n  return React.createElement(CommentForm, {\n    loading: loading,\n    post: comment,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  loading: state.comment.postLoading,\n  errors: state.errors\n});\n\nCreateCommentPage.propTypes = {\n  createComment: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, {\n  createComment\n})(CreateCommentPage);","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/containers/posts/CreateCommentPage.js"],"names":["React","useState","useEffect","PropTypes","PostForm","Validate","connect","CommentForm","createComment","CreateCommentPage","errors","loading","history","body","comment","setComment","handleChange","e","target","name","value","handleBlur","error","handleSubmit","preventDefault","mapStateToProps","state","postLoading","propTypes","func","isRequired","object","bool"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUF,EAAAA,aAAV;AAAyBG,EAAAA,OAAzB;AAAkCC,EAAAA;AAAlC,CAAD,KAAiD;AAAA,oBAC3CX,QAAQ,CAAC;AACrC;AACAY,IAAAA,IAAI,EAAE,EAF+B;AAGrCH,IAAAA,MAAM,EAAE;AAH6B,GAAD,CADmC;AAAA;AAAA,QAClEI,OADkE;AAAA,QACzDC,UADyD;;AAOzEb,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAACD,OAAO,IAAI;AACpB,+BAAYA,OAAZ;AAAqBJ,QAAAA;AAArB;AACD,KAFS,CAAV;AAGD,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;;AAMA,QAAMM,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,UAAU,mBACLD,OADK;AAER,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFlB,OAAV;AAID,GALD;;AAOA,QAAMC,UAAU,GAAGJ,CAAC,IAAI;AAAA,sBACEA,CAAC,CAACC,MADJ;AAAA,UACdC,IADc,aACdA,IADc;AAAA,UACRC,KADQ,aACRA,KADQ;;AAEtB,UAAME,KAAK,qBAAQR,OAAO,CAACJ,MAAhB,MAA2BL,QAAQ,CAACc,IAAD,EAAOC,KAAP,CAAR,CAAsBV,MAAjD,CAAX;;AACAK,IAAAA,UAAU,mBAAMD,OAAN;AAAeJ,MAAAA,MAAM,oBAAOY,KAAP;AAArB,OAAV;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAGN,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACO,cAAF;AADwB,UAEhBX,IAFgB,GAEPC,OAFO,CAEhBD,IAFgB;AAGxBL,IAAAA,aAAa,CAAC;AAAEK,MAAAA;AAAF,KAAD,EAAWD,OAAX,CAAb;AACD,GAJD;;AAMA,SACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAED,OADb;AAEI,IAAA,IAAI,EAAEG,OAFV;AAGI,IAAA,QAAQ,EAAEE,YAHd;AAII,IAAA,MAAM,EAAEK,UAJZ;AAKI,IAAA,QAAQ,EAAEE,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASD,CAzCD;;AA2CA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,OAAO,EAAEe,KAAK,CAACZ,OAAN,CAAca,WADS;AAEhCjB,EAAAA,MAAM,EAAEgB,KAAK,CAAChB;AAFkB,CAAL,CAA7B;;AAKAD,iBAAiB,CAACmB,SAAlB,GAA8B;AAC5BpB,EAAAA,aAAa,EAAEL,SAAS,CAAC0B,IAAV,CAAeC,UADF;AAE5BpB,EAAAA,MAAM,EAAEP,SAAS,CAAC4B,MAAV,CAAiBD,UAFG;AAG5BnB,EAAAA,OAAO,EAAER,SAAS,CAAC6B,IAAV,CAAeF;AAHI,CAA9B;AAMA,eAAexB,OAAO,CAClBmB,eADkB,EAElB;AAAEjB,EAAAA;AAAF,CAFkB,CAAP,CAGbC,iBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostForm from \"../../components/posts/PostForm\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\n// import { createPost } from \"../../actions/postActions\";\nimport CommentForm from \"../../components/posts/comment/CommentForm\";\nimport { createComment } from \"../../actions/postActions\";\n\nconst CreateCommentPage = ({ errors, createComment, loading, history }) => {\n  const [comment, setComment] = useState({\n    // title: \"\",\n    body: \"\",\n    errors: {}\n  });\n\n  useEffect(() => {\n    setComment(comment => {\n      return { ...comment, errors };\n    });\n  }, [errors]);\n\n  const handleChange = e => {\n    setComment({\n      ...comment,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.target;\n    const error = { ...comment.errors, ...Validate(name, value).errors };\n    setComment({ ...comment, errors: { ...error } });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { body } = comment;\n    createComment({ body }, history);\n  };\n\n  return (\n      <CommentForm\n          loading={loading}\n          post={comment}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onSubmit={handleSubmit}\n      />\n  );\n};\n\nconst mapStateToProps = state => ({\n  loading: state.comment.postLoading,\n  errors: state.errors\n});\n\nCreateCommentPage.propTypes = {\n  createComment: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    { createComment }\n)(CreateCommentPage);\n"]},"metadata":{},"sourceType":"module"}