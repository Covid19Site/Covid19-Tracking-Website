{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/containers/posts/ViewPostPage.js\";\nimport React, { useEffect } from \"react\";\nimport ViewPost from \"../../components/posts/ViewPost\";\nimport { deletePost, getPostByID } from \"../../actions/postActions\";\nimport { getCommentByID } from \"../../actions/commentActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst ViewPostPage = ({\n  auth,\n  post,\n  match,\n  history,\n  getPostByID,\n  deletePost,\n  commentIDs,\n  getCommentByID,\n  comments\n}) => {\n  const _useState = useState({\n    title: \"\",\n    body: \"\",\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        comment = _useState2[0],\n        setPost = _useState2[1];\n\n  console.log(match);\n  useEffect(() => {\n    getPostByID(match.params.id);\n  }, [match, getPostByID]);\n  useEffect(() => {\n    // getPostByID(match.params.id);\n    commentIDs.map(commentID => getCommentByID(commentID));\n  }, [match, getPostByID]);\n  console.log(post);\n\n  const handleEdit = () => {\n    history.push(\"/blog/post/update/\".concat(post._id));\n  };\n\n  const handleReply = () => {\n    history.push(\"/blog/post/\".concat(post._id, \"/create_comment\"));\n  };\n\n  const handleDelete = () => {\n    deletePost(post._id, history);\n  };\n\n  if (Object.keys(post).length === 0) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n  return React.createElement(ViewPost, {\n    post: post,\n    auth: auth,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    onReply: handleReply,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post.post\n});\n\nViewPostPage.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getPostByID,\n  deletePost,\n  getCommentByID\n})(ViewPostPage);","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/v5/v5/client/src/containers/posts/ViewPostPage.js"],"names":["React","useEffect","ViewPost","deletePost","getPostByID","getCommentByID","connect","PropTypes","ViewPostPage","auth","post","match","history","commentIDs","comments","useState","title","body","errors","comment","setPost","console","log","params","id","map","commentID","handleEdit","push","_id","handleReply","handleDelete","Object","keys","length","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ViewPost from \"../../components/posts/ViewPost\";\nimport { deletePost, getPostByID } from \"../../actions/postActions\";\nimport {getCommentByID} from \"../../actions/commentActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst ViewPostPage = ({\n   auth,\n   post,\n   match,\n   history,\n   getPostByID,\n   deletePost,\n   commentIDs,\n   getCommentByID,\n    comments,\n}) => {\n   const [comment, setPost] = useState({\n      title: \"\",\n      body: \"\",\n      errors: {}\n   });\n\n\n   console.log(match);\n   useEffect(() => {\n      getPostByID(match.params.id);\n\n   }, [match, getPostByID]);\n\n   useEffect(() => {\n         // getPostByID(match.params.id);\n      commentIDs.map(commentID => getCommentByID(commentID))\n\n      }, [match, getPostByID]);\n\n   console.log(post);\n\n   const handleEdit = () => {\n      history.push(`/blog/post/update/${post._id}`);\n   };\n\n   const handleReply = () => {\n      history.push(`/blog/post/${post._id}/create_comment`);\n   };\n\n   const handleDelete = () => {\n      deletePost(post._id, history);\n   };\n\n   if (Object.keys(post).length === 0) return <div />;\n   return (\n      <ViewPost\n         post={post}\n         auth={auth}\n         onDelete={handleDelete}\n         onEdit={handleEdit}\n         onReply={handleReply}\n      />\n   );\n};\n\nconst mapStateToProps = state => ({\n   auth: state.auth,\n   post: state.post.post\n});\n\nViewPostPage.propTypes = {\n   auth: PropTypes.object.isRequired,\n   post: PropTypes.object.isRequired,\n   getPostByID: PropTypes.func.isRequired,\n   deletePost: PropTypes.func.isRequired\n};\n\nexport default connect(\n   mapStateToProps,\n   { getPostByID, deletePost, getCommentByID }\n)(ViewPostPage);\n"]},"metadata":{},"sourceType":"module"}