{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/NEU /self-project1/covid/susan/bloggy/client/src/containers/posts/ViewPostPage.js\";\nimport React, { useEffect } from \"react\";\nimport ViewPost from \"../../components/posts/ViewPost\";\nimport { deletePost, getPostByID } from \"../../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst ViewPostPage = ({\n  auth,\n  post,\n  match,\n  history,\n  getPostByID,\n  deletePost\n}) => {\n  useEffect(() => {\n    getPostByID(match.params.id);\n  }, [match, getPostByID]);\n\n  const handleEdit = () => {\n    history.push(\"/blog/post/update/\".concat(post._id));\n  };\n\n  const handleDelete = () => {\n    deletePost(post._id, history);\n  };\n\n  if (Object.keys(post).length === 0) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n  return React.createElement(ViewPost, {\n    post: post,\n    auth: auth,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post.post\n});\n\nViewPostPage.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  getPostByID,\n  deletePost\n})(ViewPostPage);","map":{"version":3,"sources":["/Users/mac/Documents/NEU /self-project1/covid/susan/bloggy/client/src/containers/posts/ViewPostPage.js"],"names":["React","useEffect","ViewPost","deletePost","getPostByID","connect","PropTypes","ViewPostPage","auth","post","match","history","params","id","handleEdit","push","_id","handleDelete","Object","keys","length","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,2BAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,OAJmB;AAKnBP,EAAAA,WALmB;AAMnBD,EAAAA;AANmB,CAAD,KAOf;AACHF,EAAAA,SAAS,CAAC,MAAM;AACbG,IAAAA,WAAW,CAACM,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAX;AACF,GAFQ,EAEN,CAACH,KAAD,EAAQN,WAAR,CAFM,CAAT;;AAIA,QAAMU,UAAU,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAACI,IAAR,6BAAkCN,IAAI,CAACO,GAAvC;AACF,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACxBd,IAAAA,UAAU,CAACM,IAAI,CAACO,GAAN,EAAWL,OAAX,CAAV;AACF,GAFD;;AAIA,MAAIO,MAAM,CAACC,IAAP,CAAYV,IAAZ,EAAkBW,MAAlB,KAA6B,CAAjC,EAAoC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACpC,SACG,oBAAC,QAAD;AACG,IAAA,IAAI,EAAEX,IADT;AAEG,IAAA,IAAI,EAAED,IAFT;AAGG,IAAA,QAAQ,EAAES,YAHb;AAIG,IAAA,MAAM,EAAEH,UAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAQF,CA7BD;;AA+BA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC/Bd,EAAAA,IAAI,EAAEc,KAAK,CAACd,IADmB;AAE/BC,EAAAA,IAAI,EAAEa,KAAK,CAACb,IAAN,CAAWA;AAFc,CAAL,CAA7B;;AAKAF,YAAY,CAACgB,SAAb,GAAyB;AACtBf,EAAAA,IAAI,EAAEF,SAAS,CAACkB,MAAV,CAAiBC,UADD;AAEtBhB,EAAAA,IAAI,EAAEH,SAAS,CAACkB,MAAV,CAAiBC,UAFD;AAGtBrB,EAAAA,WAAW,EAAEE,SAAS,CAACoB,IAAV,CAAeD,UAHN;AAItBtB,EAAAA,UAAU,EAAEG,SAAS,CAACoB,IAAV,CAAeD;AAJL,CAAzB;AAOA,eAAepB,OAAO,CACnBgB,eADmB,EAEnB;AAAEjB,EAAAA,WAAF;AAAeD,EAAAA;AAAf,CAFmB,CAAP,CAGbI,YAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport ViewPost from \"../../components/posts/ViewPost\";\nimport { deletePost, getPostByID } from \"../../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst ViewPostPage = ({\n   auth,\n   post,\n   match,\n   history,\n   getPostByID,\n   deletePost\n}) => {\n   useEffect(() => {\n      getPostByID(match.params.id);\n   }, [match, getPostByID]);\n\n   const handleEdit = () => {\n      history.push(`/blog/post/update/${post._id}`);\n   };\n\n   const handleDelete = () => {\n      deletePost(post._id, history);\n   };\n\n   if (Object.keys(post).length === 0) return <div />;\n   return (\n      <ViewPost\n         post={post}\n         auth={auth}\n         onDelete={handleDelete}\n         onEdit={handleEdit}\n      />\n   );\n};\n\nconst mapStateToProps = state => ({\n   auth: state.auth,\n   post: state.post.post\n});\n\nViewPostPage.propTypes = {\n   auth: PropTypes.object.isRequired,\n   post: PropTypes.object.isRequired,\n   getPostByID: PropTypes.func.isRequired,\n   deletePost: PropTypes.func.isRequired\n};\n\nexport default connect(\n   mapStateToProps,\n   { getPostByID, deletePost }\n)(ViewPostPage);\n"]},"metadata":{},"sourceType":"module"}