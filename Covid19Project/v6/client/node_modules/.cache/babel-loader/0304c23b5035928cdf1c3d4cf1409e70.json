{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_POST, GET_POST, GET_POSTS, UPDATE_POST, DELETE_POST, TOGGLE_POSTS_LOADING, TOGGLE_POST_LOADING, RESET_POST } from \"./types\";\nimport { setErrors, clearErrors } from \"./errorActions\"; // '/api/posts/:id/comments'\n// export const createComment = (commentData, history, postId) => dispatch => {\n//    // dispatch(togglePostLoading());\n//    console.log(commentData);\n//    console.log(\"commentData:\"+ JSON.stringify(commentData));\n//    console.log(\"history:\"+ JSON.stringify(history));\n//    console.log(\"postid:\"+postId);\n//    axios\n//    .post(`/api/posts/${postId}/comments/create`, commentData)\n//    .then(res => {\n//       // console.log(\"send:\"+res)\n//       dispatch({\n//          type: CREATE_COMMENT,\n//          payload: res.data\n//       });\n//\n//       dispatch(togglePostLoading());\n//       history.push(`/blog/post/${postId}`);\n//    })\n//    .catch(err => {\n//       // console.log(err)\n//       dispatch(setErrors(err.response.data));\n//       dispatch(togglePostLoading());\n//    });\n// };\n\nexport const createPost = (postData, history) => dispatch => {\n  dispatch(togglePostLoading()); // console.log(postData);\n\n  axios.post(\"/api/posts/create\", postData).then(res => {\n    // console.log(postData)\n    // console.log(res)\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    // console.log(err)\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const getPostByID = id => dispatch => {\n  dispatch(togglePostLoading());\n  axios.get(`/api/posts/post/${id}`).then(res => {\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    dispatch(togglePostLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const getPostsByAuthor = author => dispatch => {\n  dispatch(togglePostsLoading());\n  axios.get(`/api/posts/author/${author}`).then(res => {\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(togglePostsLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostsLoading());\n  });\n};\nexport const getPosts = () => dispatch => {\n  dispatch(togglePostsLoading());\n  axios.get(`/api/posts/`).then(res => {\n    console.log(res);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n    dispatch(togglePostsLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostsLoading());\n  });\n};\nexport const updatePost = (id, postData, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.patch(`/api/posts/update/${id}`, postData).then(res => {\n    dispatch({\n      type: UPDATE_POST,\n      payload: res.data\n    });\n    dispatch(togglePostLoading());\n    history.push(`/blog/post/${res.data._id}`);\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const deletePost = (id, history) => dispatch => {\n  dispatch(togglePostLoading());\n  axios.delete(`/api/posts/delete/${id}`).then(res => {\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(togglePostLoading());\n    history.push(\"/blog\");\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(togglePostLoading());\n  });\n};\nexport const resetPost = () => {\n  return {\n    type: RESET_POST\n  };\n};\nexport const togglePostLoading = () => {\n  return {\n    type: TOGGLE_POST_LOADING\n  };\n};\nexport const togglePostsLoading = () => {\n  return {\n    type: TOGGLE_POSTS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/zhuzhenfang/OneDrive/Documents/project/WebDevBootCamp/Covid19Project/v6/client/src/actions/postActions.js"],"names":["axios","CREATE_POST","GET_POST","GET_POSTS","UPDATE_POST","DELETE_POST","TOGGLE_POSTS_LOADING","TOGGLE_POST_LOADING","RESET_POST","setErrors","clearErrors","createPost","postData","history","dispatch","togglePostLoading","post","then","res","type","payload","data","push","catch","err","response","getPostByID","id","get","getPostsByAuthor","author","togglePostsLoading","getPosts","console","log","updatePost","patch","_id","deletePost","delete","resetPost"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n   CREATE_POST,\n   GET_POST,\n   GET_POSTS,\n   UPDATE_POST,\n   DELETE_POST,\n   TOGGLE_POSTS_LOADING,\n   TOGGLE_POST_LOADING,\n   RESET_POST\n} from \"./types\";\n\nimport { setErrors, clearErrors } from \"./errorActions\";\n\n// '/api/posts/:id/comments'\n\n// export const createComment = (commentData, history, postId) => dispatch => {\n//    // dispatch(togglePostLoading());\n//    console.log(commentData);\n//    console.log(\"commentData:\"+ JSON.stringify(commentData));\n//    console.log(\"history:\"+ JSON.stringify(history));\n//    console.log(\"postid:\"+postId);\n//    axios\n//    .post(`/api/posts/${postId}/comments/create`, commentData)\n//    .then(res => {\n//       // console.log(\"send:\"+res)\n//       dispatch({\n//          type: CREATE_COMMENT,\n//          payload: res.data\n//       });\n//\n//       dispatch(togglePostLoading());\n//       history.push(`/blog/post/${postId}`);\n//    })\n//    .catch(err => {\n//       // console.log(err)\n//       dispatch(setErrors(err.response.data));\n//       dispatch(togglePostLoading());\n//    });\n// };\n\nexport const createPost = (postData, history) => dispatch => {\n   dispatch(togglePostLoading());\n   // console.log(postData);\n   axios\n      .post(\"/api/posts/create\", postData)\n      .then(res => {\n         // console.log(postData)\n         // console.log(res)\n         dispatch({\n            type: CREATE_POST,\n            payload: res.data\n         });\n\n         dispatch(togglePostLoading());\n         history.push(\"/blog\");\n      })\n      .catch(err => {\n         // console.log(err)\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const getPostByID = id => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .get(`/api/posts/post/${id}`)\n      .then(res => {\n         dispatch({\n            type: GET_POST,\n            payload: res.data\n         });\n         dispatch(clearErrors());\n         dispatch(togglePostLoading());\n      })\n\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const getPostsByAuthor = author => dispatch => {\n   dispatch(togglePostsLoading());\n   axios\n      .get(`/api/posts/author/${author}`)\n      .then(res => {\n         dispatch({\n            type: GET_POSTS,\n            payload: res.data\n         });\n         dispatch(togglePostsLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostsLoading());\n      });\n};\n\nexport const getPosts = () => dispatch => {\n   dispatch(togglePostsLoading());\n   axios\n      .get(`/api/posts/`)\n      .then(res => {\n         console.log(res)\n         dispatch({\n            type: GET_POSTS,\n            payload: res.data\n         });\n         dispatch(clearErrors());\n         dispatch(togglePostsLoading());\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostsLoading());\n      });\n};\n\nexport const updatePost = (id, postData, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .patch(`/api/posts/update/${id}`, postData)\n      .then(res => {\n         dispatch({\n            type: UPDATE_POST,\n            payload: res.data\n         });\n         dispatch(togglePostLoading());\n         history.push(`/blog/post/${res.data._id}`);\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const deletePost = (id, history) => dispatch => {\n   dispatch(togglePostLoading());\n   axios\n      .delete(`/api/posts/delete/${id}`)\n      .then(res => {\n         dispatch({\n            type: DELETE_POST,\n            payload: id\n         });\n         dispatch(togglePostLoading());\n         history.push(\"/blog\");\n      })\n      .catch(err => {\n         dispatch(setErrors(err.response.data));\n         dispatch(togglePostLoading());\n      });\n};\n\nexport const resetPost = () => {\n   return {\n      type: RESET_POST\n   };\n};\n\nexport const togglePostLoading = () => {\n   return {\n      type: TOGGLE_POST_LOADING\n   };\n};\n\nexport const togglePostsLoading = () => {\n   return {\n      type: TOGGLE_POSTS_LOADING\n   };\n};\n"]},"metadata":{},"sourceType":"module"}